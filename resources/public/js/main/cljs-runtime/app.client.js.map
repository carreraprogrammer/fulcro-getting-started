{"version":3,"sources":["app/client.cljs"],"mappings":"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","names":["options__45485__auto__","com.fulcrologic.fulcro.components/wrapped-render","map__49275","com.fulcrologic.fulcro.components/props","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","js/app","js/app.client","js/app.client.Car","props__45486__auto__","this__45487__auto__","temp__5802__auto__","init-state__45488__auto__","obj49278","G__49279","G__49280","goog.object/get","obj49282","com.fulcrologic.fulcro.components/configure-component!","app.client/Car","this","iva","ret","props","com.fulcrologic.fulcro.dom/macro-create-element*","com.fulcrologic.fulcro.components/force-children","map__49283","obj49286","G__49287","G__49288","obj49290","id","model","app.client/ui-car","com.fulcrologic.fulcro.components.factory.cljs$core$IFn$_invoke$arity$2","map__49291","js/app.client.Person","obj49294","G__49295","G__49296","obj49298","app.client/Person","name","cars","com.fulcrologic.fulcro.dom.macro_create_element.cljs$core$IFn$_invoke$arity$3","cljs.core.map.cljs$core$IFn$_invoke$arity$2","app.client/ui-person","map__49299","js/app.client.Sample","obj49302","G__49303","G__49304","obj49306","app.client/Sample","sample","js/app.client.APP","app.client/APP","com.fulcrologic.fulcro.application.fulcro_app.cljs$core$IFn$_invoke$arity$0","app.client/init","com.fulcrologic.fulcro.application.mount_BANG_.cljs$core$IFn$_invoke$arity$3"],"sourcesContent":["(ns app.client\r\n  (:require\r\n    [com.fulcrologic.fulcro.application :as app]\r\n    [com.fulcrologic.fulcro.components :as comp :refer [defsc]]\r\n    [com.fulcrologic.fulcro.dom :as dom]\r\n    [com.fulcrologic.fulcro.algorithms.merge :as merge]\r\n    [com.fulcrologic.fulcro.algorithms.data-targeting :as targeting]))\r\n\r\n\r\n(defsc Car [this {:tax/keys [iva ret] :as props}]\r\n  {}\r\n  (dom/div\r\n    \"Retention: \" ret))\r\n\r\n(defsc Car [this {:car/keys [id model] :as props}]\r\n  {}\r\n    (dom/div\r\n      \"Model: \" model))                         ;A component Car is looking into a car map, and taking the asign variables to the keys :car/id and car/model\r\n\r\n(def ui-car (comp/factory Car {:keyfn :car/id}))\r\n\r\n(defsc Person [this {:person/keys [id name cars] :as props}]\r\n  {}\r\n  (dom/div\r\n    (dom/div\r\n    \"Name: \" name)\r\n    (dom/h3 \"Cars\")\r\n    (dom/ul\r\n      (map ui-car cars))))                               ;A component Person is called where the id and names are destructured from the state\r\n\r\n(def ui-person (comp/factory Person {:keyfn :person/id}))   ;An instance is created from the Person component that uses as unique identifier :person/id\r\n(defsc Sample [this {:keys [sample]}]\r\n   {}\r\n  (dom/div\r\n    (ui-person sample)))                                    ;ui-person acts as a factory function that takes a single argument and returns and instance of the person component with the properties in sample\r\n\r\n(defonce APP (app/fulcro-app))\r\n\r\n(defn ^:export init []\r\n  (app/mount! APP Sample \"app\"))\r\n\r\n(comment\r\n  (reset! (::app/state-atom APP) {:sample {:person/id   1\r\n                                           :person/name \"Daniel\"\r\n                                           :person/cars [{:car/id    22\r\n                                                          :car/model \"Escort\"\r\n                                                          :car/taxes [\r\n                                                                      {:tax/iva 19\r\n                                                                      :tax/ret 1}\r\n                                                                      ]}]}\r\n                                  })\r\n  (app/schedule-render! APP))"]}