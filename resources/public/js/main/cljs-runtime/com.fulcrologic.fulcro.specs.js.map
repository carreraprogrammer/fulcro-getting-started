{"version":3,"sources":["com/fulcrologic/fulcro/specs.cljc"],"mappings":"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","names":["cljs.spec.alpha/def-impl","cljs.core/uuid?","cljs.core/int?","cljs.core/inst?","cljs.core/vector?","cljs.core/any?","cljs.spec.alpha/map-spec-impl","G__61529","cljs.core/map?","cljs.core/set?","cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4","cljs.spec.alpha.tuple_impl.cljs$core$IFn$_invoke$arity$2","i__12935__auto__","v__12936__auto__","cljs.core.nth.cljs$core$IFn$_invoke$arity$2","G__61534","cljs.core/keyword?","G__61535","G__61536","cljs.core/contains?","G__61539","G__61540","cljs.core/fn?","cljs.core/boolean?","G__61544","G__61545","G__61546","G__61547","G__61548","com.fulcrologic.fulcro.algorithms.do-not-use/atom?","cljs.spec.alpha/nilable-impl","G__61549","edn-query-language.core/ident?","G__61550","cljs.spec.alpha/or-spec-impl","G__61552","G__61553","G__61554","G__61555","G__61556","G__61559","cljs.core/pos-int?","G__61562","G__61569","G__61571"],"sourcesContent":["(ns com.fulcrologic.fulcro.specs\n  (:require\n    [clojure.spec.alpha :as s]\n    [com.fulcrologic.fulcro.algorithms.do-not-use :as futil]\n    [edn-query-language.core :as eql]))\n\n;; ================================================================================\n;; Transaction Specs\n;; ================================================================================\n\n(s/def :com.fulcrologic.fulcro.algorithms.tx-processing/id uuid?)\n(s/def :com.fulcrologic.fulcro.algorithms.tx-processing/idx int?)\n(s/def :com.fulcrologic.fulcro.algorithms.tx-processing/created inst?)\n(s/def :com.fulcrologic.fulcro.algorithms.tx-processing/started inst?)\n(s/def :com.fulcrologic.fulcro.algorithms.tx-processing/finished inst?)\n(s/def :com.fulcrologic.fulcro.algorithms.tx-processing/tx vector?)\n(s/def :com.fulcrologic.fulcro.algorithms.tx-processing/abort-id any?)\n(s/def :com.fulcrologic.fulcro.algorithms.tx-processing/options (s/keys\n                                                                    :opt [:com.fulcrologic.fulcro.algorithms.tx-processing/abort-id]\n                                                                    :opt-un [:com.fulcrologic.fulcro.algorithms.tx-processing/abort-id]))\n(s/def :com.fulcrologic.fulcro.algorithms.tx-processing/started? set?)\n(s/def :com.fulcrologic.fulcro.algorithms.tx-processing/complete? set?)\n(s/def :com.fulcrologic.fulcro.algorithms.tx-processing/results (s/map-of keyword? any?))\n(s/def :com.fulcrologic.fulcro.algorithms.tx-processing/progress (s/map-of keyword? any?))\n(s/def :com.fulcrologic.fulcro.algorithms.tx-processing/dispatch map?) ; a tree is also a node\n(s/def :com.fulcrologic.fulcro.algorithms.tx-processing/ast :edn-query-language.ast/node)\n(s/def :com.fulcrologic.fulcro.algorithms.tx-processing/original-ast-node :com.fulcrologic.fulcro.algorithms.tx-processing/ast)\n(s/def :com.fulcrologic.fulcro.algorithms.tx-processing/tx-element (s/keys\n                                                                       :req [:com.fulcrologic.fulcro.algorithms.tx-processing/idx\n                                                                             :com.fulcrologic.fulcro.algorithms.tx-processing/original-ast-node\n                                                                             :com.fulcrologic.fulcro.algorithms.tx-processing/started?\n                                                                             :com.fulcrologic.fulcro.algorithms.tx-processing/complete?\n                                                                             :com.fulcrologic.fulcro.algorithms.tx-processing/results\n                                                                             :com.fulcrologic.fulcro.algorithms.tx-processing/dispatch]\n                                                                       :opt [:com.fulcrologic.fulcro.algorithms.tx-processing/progress]))\n(s/def :com.fulcrologic.fulcro.algorithms.tx-processing/elements (s/coll-of :com.fulcrologic.fulcro.algorithms.tx-processing/tx-element :kind vector?))\n(s/def :com.fulcrologic.fulcro.algorithms.tx-processing/tx-node\n  (s/keys :req [:com.fulcrologic.fulcro.algorithms.tx-processing/id\n                :com.fulcrologic.fulcro.algorithms.tx-processing/created\n                :com.fulcrologic.fulcro.algorithms.tx-processing/options\n                :com.fulcrologic.fulcro.algorithms.tx-processing/tx\n                :com.fulcrologic.fulcro.algorithms.tx-processing/elements]\n    :opt [:com.fulcrologic.fulcro.algorithms.tx-processing/started\n          :com.fulcrologic.fulcro.algorithms.tx-processing/finished]))\n\n(s/def :com.fulcrologic.fulcro.algorithms.tx-processing/result-handler fn?)\n(s/def :com.fulcrologic.fulcro.algorithms.tx-processing/update-handler fn?)\n(s/def :com.fulcrologic.fulcro.algorithms.tx-processing/active? boolean?)\n(s/def :com.fulcrologic.fulcro.algorithms.tx-processing/parallel? boolean?)\n\n(s/def :com.fulcrologic.fulcro.algorithms.tx-processing/send-node (s/keys\n                                                                      :req [:com.fulcrologic.fulcro.algorithms.tx-processing/id\n                                                                            :com.fulcrologic.fulcro.algorithms.tx-processing/idx\n                                                                            :com.fulcrologic.fulcro.algorithms.tx-processing/ast\n                                                                            :com.fulcrologic.fulcro.algorithms.tx-processing/result-handler\n                                                                            :com.fulcrologic.fulcro.algorithms.tx-processing/update-handler\n                                                                            :com.fulcrologic.fulcro.algorithms.tx-processing/active?]\n                                                                      :opt [:com.fulcrologic.fulcro.algorithms.tx-processing/options]))\n\n(s/def :com.fulcrologic.fulcro.algorithms.tx-processing/submission-queue (s/coll-of :com.fulcrologic.fulcro.algorithms.tx-processing/tx-node :kind vector?))\n(s/def :com.fulcrologic.fulcro.algorithms.tx-processing/active-queue (s/coll-of :com.fulcrologic.fulcro.algorithms.tx-processing/tx-node :kind vector?))\n(s/def :com.fulcrologic.fulcro.algorithms.tx-processing/send-queue (s/coll-of :com.fulcrologic.fulcro.algorithms.tx-processing/send-node :kind vector?))\n(s/def :com.fulcrologic.fulcro.algorithms.tx-processing/send-queues (s/map-of :com.fulcrologic.fulcro.application/remote-name :com.fulcrologic.fulcro.algorithms.tx-processing/send-queue))\n\n(s/def :com.fulcrologic.fulcro.algorithms.tx-processing/activation-scheduled? boolean?)\n(s/def :com.fulcrologic.fulcro.algorithms.tx-processing/sends-scheduled? boolean?)\n(s/def :com.fulcrologic.fulcro.algorithms.tx-processing/queue-processing-scheduled? boolean?)\n\n;; ================================================================================\n;; Application Specs\n;; ================================================================================\n(s/def :com.fulcrologic.fulcro.application/state-atom futil/atom?)\n(s/def :com.fulcrologic.fulcro.application/app-root (s/nilable any?))\n(s/def :com.fulcrologic.fulcro.application/runtime-atom futil/atom?)\n\n;; indexing-related\n(s/def :com.fulcrologic.fulcro.application/ident->components (s/map-of eql/ident? set?))\n(s/def :com.fulcrologic.fulcro.application/prop->classes (s/map-of (s/or :keyword keyword? :ident eql/ident?) set?))\n(s/def :com.fulcrologic.fulcro.application/class->components (s/map-of keyword? set?))\n(s/def :com.fulcrologic.fulcro.application/idents-in-joins (s/coll-of eql/ident? :kind set?))\n(s/def :com.fulcrologic.fulcro.application/indexes (s/keys :opt-un [:com.fulcrologic.fulcro.application/ident->components\n                                                                      :com.fulcrologic.fulcro.application/keyword->components\n                                                                      :com.fulcrologic.fulcro.application/idents-in-joins\n                                                                      :com.fulcrologic.fulcro.application/class->components]))\n\n(s/def :com.fulcrologic.fulcro.application/remote-name keyword?)\n(s/def :com.fulcrologic.fulcro.application/remote-names (s/coll-of keyword? :kind set?))\n(s/def :com.fulcrologic.fulcro.application/remotes (s/map-of :com.fulcrologic.fulcro.application/remote-name map?))\n(s/def :com.fulcrologic.fulcro.application/active-remotes (s/coll-of :com.fulcrologic.fulcro.application/remote-name :kind set?))\n(s/def :com.fulcrologic.fulcro.application/basis-t pos-int?)\n(s/def :com.fulcrologic.fulcro.application/last-rendered-state map?)\n(s/def :com.fulcrologic.fulcro.application/runtime-state (s/keys :req [:com.fulcrologic.fulcro.application/app-root\n                                                                         :com.fulcrologic.fulcro.application/indexes\n                                                                         :com.fulcrologic.fulcro.application/remotes\n                                                                         :com.fulcrologic.fulcro.application/basis-t\n                                                                         :com.fulcrologic.fulcro.application/last-rendered-state\n                                                                         :com.fulcrologic.fulcro.algorithms.tx-processing/activation-scheduled?\n                                                                         :com.fulcrologic.fulcro.algorithms.tx-processing/queue-processing-scheduled?\n                                                                         :com.fulcrologic.fulcro.algorithms.tx-processing/sends-scheduled?\n                                                                         :com.fulcrologic.fulcro.algorithms.tx-processing/submission-queue\n                                                                         :com.fulcrologic.fulcro.algorithms.tx-processing/active-queue\n                                                                         :com.fulcrologic.fulcro.algorithms.tx-processing/send-queues]))\n(s/def :com.fulcrologic.fulcro.algorithm/tx! fn?)\n(s/def :com.fulcrologic.fulcro.algorithm/optimized-render! fn?)\n(s/def :com.fulcrologic.fulcro.algorithm/render! fn?)\n(s/def :com.fulcrologic.fulcro.algorithm/merge* fn?)\n(s/def :com.fulcrologic.fulcro.algorithm/remote-error? fn?)\n(s/def :com.fulcrologic.fulcro.algorithm/schedule-render! fn?)\n(s/def :com.fulcrologic.fulcro.algorithm/global-eql-transform (s/nilable fn?))\n(s/def :com.fulcrologic.fulcro.algorithm/shared-fn (s/nilable fn?))\n(s/def :com.fulcrologic.fulcro.algorithm/global-error-action (s/nilable fn?))\n(s/def :com.fulcrologic.fulcro.algorithm/default-result-action! fn?)\n(s/def :com.fulcrologic.fulcro.algorithm/index-root! fn?)\n(s/def :com.fulcrologic.fulcro.algorithm/index-component! fn?)\n(s/def :com.fulcrologic.fulcro.algorithm/drop-component! fn?)\n(s/def :com.fulcrologic.fulcro.algorithm/props-middleware (s/nilable fn?))\n(s/def :com.fulcrologic.fulcro.algorithm/render-middleware (s/nilable fn?))\n\n(s/def :com.fulcrologic.fulcro.application/algorithms\n  (s/keys\n    :req [:com.fulcrologic.fulcro.algorithm/default-result-action!\n          :com.fulcrologic.fulcro.algorithm/drop-component!\n          :com.fulcrologic.fulcro.algorithm/index-component!\n          :com.fulcrologic.fulcro.algorithm/index-root!\n          :com.fulcrologic.fulcro.algorithm/merge*\n          :com.fulcrologic.fulcro.algorithm/optimized-render!\n          :com.fulcrologic.fulcro.algorithm/remote-error?\n          :com.fulcrologic.fulcro.algorithm/render!\n          :com.fulcrologic.fulcro.algorithm/schedule-render!\n          :com.fulcrologic.fulcro.algorithm/tx!]\n    :opt [:com.fulcrologic.fulcro.algorithm/global-eql-transform\n          :com.fulcrologic.fulcro.algorithm/global-error-action\n          :com.fulcrologic.fulcro.algorithm/props-middleware\n          :com.fulcrologic.fulcro.algorithm/render-middleware\n          :com.fulcrologic.fulcro.algorithm/shared-fn]))\n\n(s/def :com.fulcrologic.fulcro.application/app (s/keys :req\n                                                   [:com.fulcrologic.fulcro.application/state-atom\n                                                    :com.fulcrologic.fulcro.application/algorithms\n                                                    :com.fulcrologic.fulcro.application/runtime-atom]))\n\n"]}