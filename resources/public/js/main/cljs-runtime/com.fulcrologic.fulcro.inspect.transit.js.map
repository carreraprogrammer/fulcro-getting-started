{"version":3,"sources":["com/fulcrologic/fulcro/inspect/transit.cljs"],"mappings":";;;;;AAKA,AAAA;;;;;;AAAA,AAAA,AAAA,AAAA,AAAA,AAASI,AAEIG;;AAFb,AAAA,AAAA,AAEQD;AAFR,AAAA;;;AAAA,AAAA,AAAA,AAAA,AAASF,AAGIG;;AAHb,AAAA,AAAA,AAGQD;AAHR,AAAA,AAGiB,AAACE,AAAWD,AAAG,AAACE,AAAQF;;;AAHzC,AAAA,AAAA,AAAA,AAASH,AAIUG;;AAJnB,AAAA,AAAA,AAIcD;AAJd,AAIsB,AAACE,AAAWD;;;AAJlC,AAAA,AAAA,AAASH;AAAT,AAAA,AAAA;;;AAAA,AAAA,AAAA,AAASA;;AAAT,AAAA,AAAA,AAASA;;AAAT,AAAA,AAAA,AAAAJ,AAAAC,AAAAC,AAASE;AAAT,AAAA,AAAAD,AAAAF,AAAA;;;AAAA;;;AAAA,AAASI;AAAT,AAAA,AAAAD;;;AAASA,AAMT,AAAA;;;;;;AAAA,AAAA,AAAA,AAAA,AAAA,AAASM,AAEIH;;AAFb,AAAA,AAAA,AAEQD;AAFR,AAAA;;;AAAA,AAAA,AAAA,AAAA,AAASI,AAGIH;;AAHb,AAAA,AAAA,AAGQD;AAHR,AAGgB,AAACM,AAAOL;;;AAHxB,AAAA,AAAA,AAASG;AAAT,AAAA,AAAA;;;AAAA,AAAA,AAAA,AAASA;;AAAT,AAAA,AAAA,AAASA;;AAAT,AAAA,AAAA,AAAAV,AAAAC,AAAAC,AAASQ;AAAT,AAAA,AAAAP,AAAAF,AAAA;;;AAAA;;;AAAA,AAASU;AAAT,AAAA,AAAAD;;;AAASA,AAKT,AAAA,AAAA,AAAKG,AACFC,AAAwB,AAAAV,AACA,AAAAM;AAE3B,AAAA,AAAA,AAAKK,AACS,AAAAC;AAAA,AAAA,AAAAC,AAAAD;AAAA,AAAAE,AAAAD,AAAA,AAAA,AAAME;AAAN,AAAAD,AAAAD,AAAA,AAAA,AAAUG;AAAV,AAAiB,AAACC,AAAQF,AAAIC;;AAE5C,AAAA,AAAME,AAAMC;AAAZ,AACE,AAAMC,AAAO,AAAA,AAAA,AAACC,AAAqBV;AAAnC,AACE,AAACW,AAAOF,AAAOD;;AAEnB,AAAA,AAAMI,AAAOC;AAAb,AACE,AAAMC,AAAO,AAAA,AAAA,AAACC,AAAqBjB;AAAnC,AACE,AAACkB,AAAQF,AAAOD;;AAEpB,AAAA,AAAA,AAAA,AAAAI,AAAaC","names":["this__4374__auto__","writer__4375__auto__","opt__4376__auto__","cljs.core/-write","com.fulcrologic.fulcro.inspect.transit/ErrorHandler","com.fulcrologic.fulcro.inspect.transit/->ErrorHandler","this","v","cljs.core/ex-message","cljs.core/ex-data","com.fulcrologic.fulcro.inspect.transit/DefaultHandler","com.fulcrologic.fulcro.inspect.transit/->DefaultHandler","cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic","com.fulcrologic.fulcro.inspect.transit/write-handlers","cljs.core/ExceptionInfo","com.fulcrologic.fulcro.inspect.transit/read-handlers","p__51959","vec__51960","cljs.core.nth.cljs$core$IFn$_invoke$arity$3","msg","data","cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2","com.fulcrologic.fulcro.inspect.transit/read","str","reader","com.fulcrologic.fulcro.algorithms.transit.reader.cljs$core$IFn$_invoke$arity$1","cognitect.transit/read","com.fulcrologic.fulcro.inspect.transit/write","x","writer","com.fulcrologic.fulcro.algorithms.transit.writer.cljs$core$IFn$_invoke$arity$1","cognitect.transit/write","cljs.core/PROTOCOL_SENTINEL","com.cognitect.transit.types/UUID"],"sourcesContent":["(ns com.fulcrologic.fulcro.inspect.transit\n  (:require [cognitect.transit :as t]\n            [com.cognitect.transit.types :as ty]\n            [com.fulcrologic.fulcro.algorithms.transit :as ft]))\n\n(deftype ErrorHandler []\n  Object\n  (tag [this v] \"js-error\")\n  (rep [this v] [(ex-message v) (ex-data v)])\n  (stringRep [this v] (ex-message v)))\n\n(deftype DefaultHandler []\n  Object\n  (tag [this v] \"unknown\")\n  (rep [this v] (pr-str v)))\n\n(def write-handlers\n  {cljs.core/ExceptionInfo (ErrorHandler.)\n   \"default\"               (DefaultHandler.)})\n\n(def read-handlers\n  {\"js-error\" (fn [[msg data]] (ex-info msg data))})\n\n(defn read [str]\n  (let [reader (ft/reader {:handlers read-handlers})]\n    (t/read reader str)))\n\n(defn write [x]\n  (let [writer (ft/writer {:handlers write-handlers})]\n    (t/write writer x)))\n\n(extend-type ty/UUID IUUID)\n"]}